<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugh's Blog</title><link>https://hughxia.github.io/</link><description>Recent content on Hugh's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 11 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hughxia.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>基于Github搭建博客指南</title><link>https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/</link><pubDate>Sun, 11 Jul 2021 00:16:41 +0800</pubDate><guid>https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/</guid><description>&lt;img src="https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/github.png" alt="Featured image of post 基于Github搭建博客指南" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文会介绍如何基于Github Pages + Github Actions + Hugo搭建个人博客，之后你只需要完全专注于文章创作，其余事情完全不用操心。它主要包括以下特性：&lt;/p>
&lt;ul>
&lt;li>免费托管&lt;/li>
&lt;li>版本控制&lt;/li>
&lt;li>全自动部署&lt;/li>
&lt;li>Markdown语法支持&lt;/li>
&lt;li>个性化主题&lt;/li>
&lt;li>支持绑定自定义域名&lt;/li>
&lt;li>丰富的拓展性&lt;/li>
&lt;/ul>
&lt;h3 id="前置知识">前置知识&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://git-scm.com" target="_blank" rel="noopener"
>Git&lt;/a>（熟悉）&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com" target="_blank" rel="noopener"
>GitHub&lt;/a>（了解）&lt;/li>
&lt;li>Markdown（了解）&lt;/li>
&lt;li>HTML&amp;amp;CSS（了解）&lt;/li>
&lt;/ul>
&lt;p>效果展示：&lt;a class="link" href="https://hughxia.github.io/" target="_blank" rel="noopener"
>https://hughxia.github.io&lt;/a>&lt;/p>
&lt;p>项目地址：&lt;a class="link" href="https://github.com/hughxia/hughxia.github.io" target="_blank" rel="noopener"
>https://github.com/hughxia/hughxia.github.io&lt;/a>&lt;/p>
&lt;h2 id="创建github-pages站点">创建GitHub Pages站点&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://pages.github.com/" target="_blank" rel="noopener"
>Github Pages&lt;/a> is available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server.&lt;/p>
&lt;/blockquote>
&lt;p>Github Pages 可以帮助我们从特定的GitHub Repo生成静态站点。这里我们参照&lt;a class="link" href="https://docs.github.com/cn/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_blank" rel="noopener"
>Github Pages 官方文档&lt;/a>创建属于你的个人站点。&lt;/p>
&lt;h3 id="创建仓库">创建仓库&lt;/h3>
&lt;p>首先新建一个Repository，Repository name 根据 Owner的不同，名字要求分别为&lt;code>&amp;lt;user&amp;gt;.github.io&lt;/code> 或 &lt;code>&amp;lt;organization&amp;gt;.github.io&lt;/code>格式。因为是个人博客，我们使用自己的用户名。&lt;/p>
&lt;h3 id="查看设置">查看设置&lt;/h3>
&lt;p>当创建完成后，就可以在Github Repository中看到刚刚创建的 &lt;code>&amp;lt;user&amp;gt;.github.io&lt;/code> 项目，我们可以在当前Repo的 &lt;strong>Setting&lt;/strong>菜单中的&lt;em>Pages&lt;/em>页，进行相关设置。
&lt;figure style="flex-grow: 180; flex-basis: 432px">
&lt;a href="https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/github-pages-setting.jpeg" data-size="1148x637">&lt;img src="https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/github-pages-setting.jpeg"
srcset="https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/github-pages-setting_hudba47096f0836875a6f919be997c5544_76921_480x0_resize_q75_box.jpeg 480w, https://hughxia.github.io/p/%E5%9F%BA%E4%BA%8Egithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/github-pages-setting_hudba47096f0836875a6f919be997c5544_76921_1024x0_resize_q75_box.jpeg 1024w"
width="1148"
height="637"
loading="lazy"
alt="Setting">
&lt;/a>
&lt;figcaption>Setting&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>在&lt;em>Source&lt;/em>项中可以配置站点的发布源，默认应为&lt;code>main&lt;/code>分支的根目录。图中我设置为了&lt;code>gh-pages&lt;/code>分支，原因后面再讲。&lt;/p>
&lt;p>在&lt;em>Custom domain&lt;/em>项则可以配置自定义域名，并使用HTTPS。&lt;/p>
&lt;h2 id="使用hugo生成博客框架">使用Hugo生成博客框架&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a> is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.&lt;/p>
&lt;/blockquote>
&lt;p>目前我们的个人站点只有一个简单的静态页面，要搭建完整的Blog系统还需要&lt;em>博客生成器&lt;/em>的帮助。目前主流的三大工具分别为&lt;a class="link" href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener"
>Hugo&lt;/a>，&lt;a class="link" href="https://github.com/jekyll/jekyll" target="_blank" rel="noopener"
>Jekyll&lt;/a>和&lt;a class="link" href="https://github.com/hexojs/hexo" target="_blank" rel="noopener"
>Hexo&lt;/a>。其中Hugo的Star数最多，编译速度也最快，这里我们选用它来做示例。&lt;/p>
&lt;h3 id="安装hugo">安装Hugo&lt;/h3>
&lt;p>MacOS和Linux系统都可以直接在命令行进行安装，Windows系统的安装可以参照&lt;a class="link" href="https://gohugo.io/getting-started/installing" target="_blank" rel="noopener"
>官方文档&lt;/a>。这里以Ubuntu20.04为例，打开终端，输入安装命令：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">apt install hugo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后，通过以下命令进行确认：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">hugo version
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="新建站点">新建站点&lt;/h3>
&lt;p>进入上面创建的 &lt;code>&amp;lt;user&amp;gt;.github.io&lt;/code> 项目路径，执行下面的命令，Hugo会在当前路径创建站点框架。可以通过 &lt;code>-f yaml&lt;/code>参数指定配置文件格式。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">hugo new site . -f yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="选择主题">选择主题&lt;/h3>
&lt;p>&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>官方主题页&lt;/a>有丰富的主题可供选择，下面以我选择的&lt;a class="link" href="https://themes.gohugo.io/themes/hugo-theme-stack/" target="_blank" rel="noopener"
>hugo-theme-stack&lt;/a>为例讲解。&lt;/p>
&lt;p>这里我们可以通过&lt;a class="link" href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noopener"
>Git Submodule&lt;/a>机制将主题仓库克隆下来：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">git submodule add https://github.com/htdvisser/hugo-theme-stack.git themes/hugo-theme-stack
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意：&lt;/strong> 当我们使用&lt;code>git clone&lt;/code>命令拉取远程仓库的时候，默认不会拉取子模块代码，可以通过添加&lt;code>--recurse-submodules&lt;/code>参数来拉取。 或者在主项目中执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">git submodule update --remote --merge
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编辑配置">编辑配置&lt;/h3>
&lt;p>在项目主目录下可以找到 &lt;code>config.yaml&lt;/code> 文件，这是整个Hugo项目的配置文件，我们修改 &lt;code>baseURL&lt;/code> , &lt;code>title&lt;/code> 和 &lt;code>theme&lt;/code> 这几个字段完成基本配置。其中不同的主题会提供丰富的自定义配置，可以参考对应主题仓库的 &lt;strong>README.md&lt;/strong> 按需配置。示例：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Yaml" data-lang="Yaml">&lt;span class="nt">baseurl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://hughxia.github.io/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">languageCode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">zh-cn&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">theme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo-theme-stack&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Hugh&amp;#39;s Blog&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建文章">创建文章&lt;/h3>
&lt;p>在主目录下执行以下命令创建一篇文章：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">hugo new post/first-post.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hugo会帮我们在md文件头部以与配置文件格式相同语法的形式添加一些Meta信息，我们在&lt;code>---&lt;/code>下方进行文章内容的编辑。&lt;/p>
&lt;h3 id="本地预览">本地预览&lt;/h3>
&lt;p>启动 &lt;code>hugo server&lt;/code>，即可在本地&lt;a class="link" href="http://localhost:1313" target="_blank" rel="noopener"
>http://localhost:1313&lt;/a>进行预览。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Shell" data-lang="Shell">hugo server -D
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>-D&lt;/code> 参数指会渲染草稿，通过 &lt;code>hugo new posts&lt;/code>命令创建出来的文章顶部Meta信息中默认&lt;strong>draft&lt;/strong>设置为&lt;em>true&lt;/em>,当编辑完成准备正式发布时，需要将其改为&lt;em>false&lt;/em>。&lt;/p>
&lt;h2 id="通过github-actions完成自动部署工作">通过Github Actions完成自动部署工作&lt;/h2>
&lt;p>TODO&lt;/p></description></item></channel></rss>